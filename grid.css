* {
  box-sizing: border-box;
}
html {
  background-color: whitesmoke;
}
body {
  color: #fff;
  text-align: center;
}
/* grid */
/* grid template-columns is used to specify the number of columns and the width of each columns */
/* grid template-rows is used to specify the number of rows and the height of each rows */
/* Unlike margin, grid gap does not add space to the left or right of the content/container */
.content {
  display: grid;
  /* grid-template-columns: 33.3% 33.3% 33.3%; */
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, minmax(200px, auto));
  /* grid-column-gap: 10px;
  grid-row-gap: 10px; */
  grid-gap: 10px;
  /* grid-auto-rows: minmax(200px, auto); */
  max-width: 960px;
  margin: 0 auto;
}
.content div {
  background-color: #3bbced;
  padding: 30px;
  /* margin: 10px; */
}
.content div:nth-child(even) {
  background-color: #777;
}

/* GRID LINE */
.content-1 {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: repeat(4, minmax(150px, auto));
  grid-gap: 10px;

  max-width: 960px;
  margin: 0 auto;
}
.content-1 div {
  background-color: #3bbced;
  padding: 30px;
  /* margin: 10px; */
}
.content-1 div:nth-child(even) {
  background-color: #777;
}
.one {
  grid-column: 1/3;
  /* grid-column-start: 1;
  grid-column-end: 4; */
}
.two {
  grid-column: 3/7;
}
.three {
  grid-column: 1/4;
  grid-row: 2/4;
}
.four {
  grid-column: 4/7;
  grid-row: 2/4;
}
.five {
  grid-column: 3/7;
}
.six {
  grid-row: 4;
  grid-column: 1/3;
}
/* GRID NESTED*/
.content-2 {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 10px;

  max-width: 960px;
  margin: 0 auto;
}
.content-2 div {
  background-color: #3bbced;
  padding: 30px;
}
.content-2 div:nth-child(even) {
  background-color: #777;
}
.nested {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 10px;
}
.nested p {
  border: 2px solid #fff;
  padding: 20px;
  margin: 0;
}
/* align-items and justify-items */
/* align-items is up and down */
/* justify-item is left and right */
/* align-self and justify-self are applied to the grid children */

/*  */
#grid {
  display: grid;
  max-width: 960px;
  margin: 0 auto;
  grid-template-columns: repeat(12, 1fr);
  grid-auto-rows: minmax(100px, auto);
  grid-gap: 10px;
}

#grid > * {
  background: #3bbced;
  padding: 30px;
  position: relative;
}

/* header {
  grid-column: 1/13;
}
main {
  grid-column: 4/13;
  grid-row: 2/4;
}
aside {
  grid-column: 1/4;
}
section {
  grid-column: 1/13;
  grid-row: 4/6;
}
nav {
  grid-column: 1/4;
}
footer {
  grid-column: 1/13;
} */
#layout {
  display: grid;
  position: absolute;
  top: 0;
  left: 0;
  grid-template-columns: repeat(12, 1fr);
  grid-auto-rows: minmax(100%, auto);
  width: 100%;
  height: 100%;
  background: transparent;
  padding: 0;
  display: none;
}
#grid p {
  border: 1px solid;
  background: #000;
  margin: 0;
  opacity: 0.2;
}
input:checked + #grid #layout {
  display: grid;
}
#area {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-auto-rows: minmax(100px, auto);
  max-width: 960px;
  margin: 0 auto;
  grid-template-areas:
    "header header header header"
    "aside . main main"
    "nav . main main"
    "section section section section"
    "section section section section"
    "footer footer footer footer";

  gap: 10px;
}
#area > * {
  background: #3bbced;
  padding: 30px;
}
header {
  grid-area: header;
}
main {
  grid-area: main;
}
section {
  grid-area: section;
}
aside {
  grid-area: aside;
}
nav {
  grid-area: nav;
}
footer {
  grid-area: footer;
}
